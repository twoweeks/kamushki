import React, { useRef } from 'react';

import { SendPageStateType } from '../../SendPageTypes';

import './StatusModal.scss';

type PropsType = Pick<SendPageStateType, 'SendedEntryStatus'> & {
    handleModalClose: () => void;
};

const StatusModal: React.FC<PropsType> = props => {
    const { SendedEntryStatus } = props;
    const { handleModalClose } = props;

    const BaseClassName = useRef('sendPage__statusModal');
    const BaseButtonClassName = useRef(`${BaseClassName.current}__button`);

    return (
        <>
            <div className="modal__backdrop" onClick={handleModalClose} />
            <div className={`modal__content ${BaseClassName.current}`}>
                {SendedEntryStatus === 'success' ? (
                    <>
                        <p>
                            <strong>–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</strong>
                        </p>
                        <p>–£—Ä–∞! ü§ó</p>
                        <div className={BaseButtonClassName.current}>
                            <button onClick={handleModalClose}>—Å–∫—Ä—ã—Ç—å</button>
                        </div>
                    </>
                ) : null}

                {SendedEntryStatus === 'wrong_captcha' ? (
                    <>
                        <p>
                            <strong>–ö–∞–ø—á–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞</strong>
                        </p>
                        <p>–ü–µ—á–∞–ª—å! üòü</p>
                        <div className={BaseButtonClassName.current}>
                            <button onClick={handleModalClose}>–ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
                        </div>
                    </>
                ) : null}

                {SendedEntryStatus === 'wrong_data' ? (
                    <>
                        <p>
                            <strong>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</strong>
                        </p>
                        <p>–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –≤—Å—ë –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤–µ—Ä–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É</p>
                        <div className={BaseButtonClassName.current}>
                            <button onClick={handleModalClose}>–∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</button>
                        </div>
                    </>
                ) : null}

                {SendedEntryStatus === 'form_closed' ? (
                    <>
                        <p>
                            <strong>–§–æ—Ä–º–∞ –∑–∞–∫—Ä—ã—Ç–∞</strong>
                        </p>
                        <p>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É</p>
                        <div className={BaseButtonClassName.current}>
                            <button onClick={handleModalClose}>—Å–∫—Ä—ã—Ç—å</button>
                        </div>
                    </>
                ) : null}

                {SendedEntryStatus === 'unknown' ? (
                    <>
                        <p>
                            <strong>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞</strong>
                        </p>
                        <p>–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –≤—Å—ë –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤–µ—Ä–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É</p>
                        <div className={BaseButtonClassName.current}>
                            <button onClick={handleModalClose}>–∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</button>
                        </div>
                    </>
                ) : null}
            </div>
        </>
    );
};

export default StatusModal;
